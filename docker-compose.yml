services:
  backend-database:
    build: ./backend-database
    container_name: backend-database
    env_file:
      - ./backend-database/.env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped


  experiment-tracking:
    build: ./backend-service-experiment-tracking
    container_name: backend-service-experiment-tracking
    ports:
      - "5000:5000"
    command: >
      mlflow server 
      --backend-store-uri postgresql://postgres:postgres@backend-database:5432/mlflow_db 
      --default-artifact-root /mlruns 
      --host 0.0.0.0
    depends_on:
      - backend-database
    volumes:
      - ./mlruns:/mlruns
    restart: unless-stopped

  orchestration:
    build: ./backend-service-orchestration
    ports:
      - 4200:4200
    restart: unless-stopped

  batch-service:
    build: ./deploy-batch 
    depends_on:
      - orchestration
      - model-training
    volumes:
      - ./train/data:/data
      - ./models:/models
      - ./mlruns:/mlruns
      - ./batch-data:/batch-data
    restart: on-failure

  model-training:
    build: ./train
    depends_on:
      - experiment-tracking
    volumes:
      - ./train/data:/app/data
      - ./models:/app/models
      - ./mlruns:/mlruns
    environment:
      - MLFLOW_TRACKING_URI=http://experiment-tracking:5000
    restart: on-failure

  monitoring:
    build: ./monitor-reporting
    depends_on:
      - batch-service
    env_file:
      - ./monitor-reporting/.env
    volumes:
      - ./monitor-reporting/metrics:/metrics
      - ./batch-data:/batch-data
      - ./mlruns:/mlruns
    restart: on-failure
    

  grafana:
    image: grafana/grafana
    ports:
      - "3400:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./batch-data:/batch-data
    restart: unless-stopped

volumes:
  pgdata:
  grafana-data:
